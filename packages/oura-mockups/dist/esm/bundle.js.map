{"version":3,"file":"bundle.js","sources":["../../../oura-data/dist/esm/mockups/bundle.js","../../../utils/dist/esm/bundle.js","../../src/ouraMockups.js"],"sourcesContent":["const ActivitySummary = {\n  summary_date: \"2016-09-03\",\n  day_start: \"2016-09-03T04:00:00+03:00\",\n  day_end: \"2016-09-04T03:59:59+03:00\",\n  timezone: 180,\n  score: 87,\n  score_stay_active: 90,\n  score_move_every_hour: 100,\n  score_meet_daily_targets: 60,\n  score_training_frequency: 96,\n  score_training_volume: 95,\n  score_recovery_time: 100,\n  daily_movement: 7806,\n  non_wear: 313,\n  rest: 426,\n  inactive: 429,\n  inactivity_alerts: 0,\n  low: 224,\n  medium: 49,\n  high: 0,\n  steps: 9206,\n  cal_total: 2540,\n  cal_active: 416,\n  met_min_inactive: 9,\n  met_min_low: 167,\n  met_min_medium_plus: 159,\n  met_min_medium: 159,\n  met_min_high: 0,\n  average_met: 1.4375,\n  class_5min: \"1112211111111111111111111111111111111111111111233322322223333323322222220000000000000000000000000000000000000000000000000000000233334444332222222222222322333444432222222221230003233332232222333332333333330002222222233233233222212222222223121121111222111111122212321223211111111111111111\",\n  met_1min: [1.2, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 1.2, 0.9, 1.1, 1.2, 1.1, 1.1, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 1.2, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.3, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.3, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.2, 0.9, 0.9, 0.9, 1.1, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.9, 2.7, 2.8, 1.6, 1.8, 1.5, 1.5, 1.8, 1.6, 1.9, 1.4, 1.9, 1.4, 1.5, 1.7, 1.7, 1.4, 1.5, 1.5, 1.7, 1.3, 1.7, 1.7, 1.9, 1.5, 1.4, 1.8, 2.2, 1.4, 1.6, 1.7, 1.7, 1.4, 1.5, 1.6, 1.4, 1.4, 1.7, 1.6, 1.3, 1.3, 1.4, 1.3, 2.6, 1.6, 1.7, 1.5, 1.6, 1.6, 1.8, 1.9, 1.8, 1.7, 2, 1.8, 2, 1.7, 1.5, 1.3, 2.4, 1.4, 1.6, 2, 2.8, 1.8, 1.5, 1.8, 1.6, 1.5, 1.8, 1.8, 1.4, 1.6, 1.7, 1.7, 1.6, 1.5, 1.5, 1.8, 1.8, 1.7, 1.8, 1.8, 1.5, 2.4, 1.9, 1.3, 1.2, 1.4, 1.3, 1.5, 1.2, 1.4, 1.4, 1.6, 1.5, 1.6, 1.4, 1.4, 1.6, 1.6, 1.6, 1.8, 1.7, 1.3, 1.9, 1.3, 1.2, 1.2, 1.3, 1.5, 1.4, 1.4, 1.3, 1.7, 1.2, 1.3, 1.5, 1.7, 1.5, 2.6, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.9, 3.6, 0.9, 0.1, 0.1, 0.1, 0.1, 0.1, 3.3, 3.8, 3.6, 2.3, 3.1, 3.2, 3.5, 4.3, 3.6, 1.7, 1.6, 2.8, 2.1, 3.3, 4.9, 3.3, 1.8, 5, 4.6, 5.3, 4.9, 4.9, 5.4, 5.4, 5.2, 5.3, 4.5, 5.3, 4.5, 4.4, 5, 5.3, 4.8, 4.6, 1.8, 4.4, 3.6, 3.5, 2.9, 2.6, 3.1, 0.9, 0.1, 2.9, 3.8, 1.7, 2.8, 1.8, 1.5, 1.4, 1.4, 1.3, 1.4, 1.3, 1.4, 1.3, 1.3, 1.2, 1.3, 1.6, 1.5, 1.5, 1.4, 1.8, 1.3, 1.4, 1.3, 1.4, 1.6, 1.6, 1.4, 1.3, 1.4, 1.4, 1.6, 1.5, 1.4, 2, 1.5, 1.4, 1.4, 1.3, 1.2, 1.3, 1.3, 1.6, 1.6, 1.5, 1.5, 1.8, 1.5, 1.2, 1.2, 1.5, 1.6, 1.5, 1.7, 1.7, 1.5, 1.6, 2.5, 1.5, 1.3, 1.2, 1.4, 1.6, 1.3, 1.6, 1.7, 2, 1.2, 1.3, 1.9, 3.3, 2.8, 1.7, 1.4, 1.4, 1.4, 1.5, 1.4, 1.5, 1.3, 2, 1.4, 1.2, 1.5, 1.2, 1.2, 1.8, 2.4, 3, 4.6, 4, 3.6, 2.2, 0.9, 4, 3.3, 2.6, 4.4, 2.3, 4.5, 5.2, 5.2, 5, 5.3, 5, 4.6, 5.4, 5.7, 5.5, 5.2, 5.5, 3.8, 5, 5, 4.4, 4.8, 5.5, 4.1, 4.5, 3.2, 3.3, 2.6, 4, 3.4, 2.1, 1.5, 1.5, 1.4, 1.4, 1.5, 1.3, 1.3, 1.5, 1.4, 1.2, 1.2, 1.4, 1.2, 1.2, 1.2, 1.2, 1.1, 1.3, 1.6, 1.8, 1.5, 1.3, 1.5, 1.5, 1.6, 1.5, 1.6, 1.4, 1.4, 1.4, 1.3, 1.3, 1.3, 1.3, 1.2, 1.3, 1.2, 1.2, 1.2, 0.9, 1.1, 1.1, 1.1, 1.1, 1.7, 1.1, 0.9, 0.9, 0.9, 1.1, 1.1, 0.9, 1.1, 0.9, 1.2, 1.3, 2.4, 2.2, 1.6, 0.9, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 2.4, 2.7, 1.3, 1.4, 1.3, 1.2, 1.3, 1.2, 1.4, 1.4, 2.2, 1.7, 2.9, 1.3, 1.4, 1.2, 1.3, 1.8, 2.1, 2.2, 2.5, 1.9, 2.3, 2.7, 2.3, 2, 1.7, 2, 2.1, 1.7, 1.8, 1.2, 1.2, 0.9, 0.9, 1.3, 1.4, 1.2, 1.6, 1.7, 2.4, 2.4, 2, 1.2, 1.3, 1.3, 1.2, 1.3, 2.4, 1.2, 1.2, 1.3, 2, 1.3, 1.8, 1.2, 1.2, 1.2, 1.2, 1.8, 1.7, 1.3, 1.3, 1.6, 1.8, 2.2, 1.3, 1.5, 1.5, 1.8, 1.3, 1.7, 1.8, 2.1, 2, 1.9, 1.6, 2, 1.8, 2, 1.6, 1.2, 1.7, 1.5, 1.5, 2.3, 2.6, 3.3, 3.3, 1.5, 1.2, 1.3, 1.5, 1.3, 1.5, 1.5, 3.7, 2.4, 3.3, 3, 3.7, 4.5, 2.8, 1.3, 1.9, 2.2, 1.6, 1.3, 1.2, 1.3, 1.3, 2.9, 3.3, 2, 2.2, 2.6, 2.7, 4.5, 3.2, 4.5, 3.3, 2.1, 3.4, 3, 2.7, 3.3, 2.1, 2.3, 1.7, 1.7, 2.8, 0.9, 2.2, 0.9, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 1.4, 1.6, 1.2, 1.2, 1.3, 1.7, 1.3, 1.5, 1.3, 1.3, 1.3, 1.3, 1.5, 2.9, 1.5, 1.2, 1.4, 1.2, 1.3, 1.3, 1.4, 1.3, 1.4, 1.4, 1.2, 1.2, 1.3, 1.2, 1.2, 1.2, 1.2, 1.4, 1.4, 1.3, 1.2, 1.2, 1.2, 1.9, 1.4, 1.3, 1.4, 1.3, 1.7, 1.3, 2.1, 2.9, 1.9, 1.8, 1.6, 1.4, 1.4, 1.7, 1.2, 1.5, 1.6, 1.9, 1.5, 1.8, 1.3, 1.2, 1.8, 2.3, 2, 2.2, 1.7, 1.5, 1.2, 1.2, 1.2, 1.1, 1.1, 1.4, 3.3, 2, 1.5, 2.4, 2.4, 1.6, 2.6, 2.5, 2.3, 1.5, 1.2, 1.2, 1.2, 1.3, 1.2, 1.2, 1.3, 2, 1.5, 1.7, 1.2, 1.3, 1.6, 1.5, 1.4, 1.4, 1.4, 1.2, 1.2, 1.1, 1.1, 0.9, 0.9, 1.3, 0.9, 0.9, 0.9, 0.9, 0.9, 1.3, 1.1, 1.1, 1.3, 0.9, 0.9, 1.3, 0.9, 1.5, 2.1, 2.1, 1.2, 1.2, 1.3, 1.2, 1.2, 1.5, 1.4, 1.3, 1.2, 1.2, 1.3, 1.3, 1.2, 1.3, 1.2, 1.2, 1.2, 1.2, 1.2, 1.4, 1.2, 1.5, 1.5, 1.4, 1.4, 1.5, 1.5, 1.3, 1.2, 1.2, 0.9, 2.3, 1.8, 1.3, 1.2, 1.2, 1.1, 0.9, 0.9, 0.9, 1.2, 1.6, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 1.9, 1.2, 1.3, 1.1, 1.3, 1.1, 0.9, 0.9, 0.9, 1.2, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 1.2, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 1.2, 1.6, 1.4, 1.3, 1.4, 1.5, 1.2, 1.2, 1.1, 0.9, 0.9, 1.1, 1.1, 0.9, 0.9, 1.1, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 1.1, 1.3, 0.9, 1.3, 1.1, 1.1, 0.9, 1.1, 0.9, 1.1, 0.9, 1.3, 1.2, 0.9, 1.1, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 1.1, 1.2, 1.6, 0.9, 1.1, 1.4, 3.7, 2.8, 3.2, 2.7, 1.2, 1.2, 1.3, 1.3, 1.3, 1.2, 1.2, 0.9, 0.9, 0.9, 1.1, 1.1, 0.9, 1.1, 1.3, 0.9, 1.1, 1.1, 1.1, 1.3, 4.1, 1.5, 1.7, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.1, 0.9, 0.9, 0.9, 1.1, 1.3, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 1.1, 0.9, 1.3, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9],\n  rest_mode_state: 0\n};\n\nconst AsyncData = dataModel => {\n  let data = [];\n  const header = Object.keys(dataModel).map(t => {\n    return t;\n  }); //console.log(\"HEADER \", header);\n\n  data.push(header.join(\"\\t\"));\n  const row = Object.keys(dataModel).map(t => {\n    if (Array.isArray(dataModel[t])) {\n      //console.log(\"ARRAY \", t);\n      return \"[\" + `${dataModel[t]}` + \"]\";\n    } else {\n      return dataModel[t];\n    }\n  });\n  data.push(row.join(\"\\t\")); //console.log(\"DATA \", data);\n\n  return data;\n};\n\nconst ActivitySummaryAsync = AsyncData(ActivitySummary);\nconst ReadinessSummary = {\n  summary_date: \"2016-09-03\",\n  period_id: 0,\n  score: 62,\n  score_previous_night: 5,\n  score_sleep_balance: 75,\n  score_previous_day: 61,\n  score_activity_balance: 77,\n  score_resting_hr: 98,\n  score_hrv_balance: 90,\n  score_recovery_index: 45,\n  score_temperature: 86,\n  rest_mode_state: 0\n};\nconst ReadinessSummaryAsync = AsyncData(ReadinessSummary);\nconst SleepSummary = {\n  summary_date: \"2017-11-05\",\n  period_id: 0,\n  is_longest: 1,\n  timezone: 120,\n  bedtime_start: \"2017-11-06T02:13:19+02:00\",\n  bedtime_end: \"2017-11-06T08:12:19+02:00\",\n  score: 70,\n  score_total: 57,\n  score_disturbances: 83,\n  score_efficiency: 99,\n  score_latency: 88,\n  score_rem: 97,\n  score_deep: 59,\n  score_alignment: 31,\n  total: 20310,\n  duration: 21540,\n  awake: 1230,\n  light: 10260,\n  rem: 7140,\n  deep: 2910,\n  onset_latency: 480,\n  restless: 39,\n  efficiency: 94,\n  midpoint_time: 11010,\n  hr_lowest: 49,\n  hr_average: 56.375,\n  rmssd: 54,\n  breath_average: 13,\n  temperature_delta: -0.06,\n  hypnogram_5min: \"443432222211222333321112222222222111133333322221112233333333332232222334\",\n  hr_5min: [0, 53, 51, 0, 50, 50, 49, 49, 50, 50, 51, 52, 52, 51, 53, 58, 60, 60, 59, 58, 58, 58, 58, 55, 55, 55, 55, 56, 56, 55, 53, 53, 53, 53, 53, 53, 57, 58, 60, 60, 59, 57, 59, 58, 56, 56, 56, 56, 55, 55, 56, 56, 57, 58, 55, 56, 57, 60, 58, 58, 59, 57, 54, 54, 53, 52, 52, 55, 53, 54, 56, 0],\n  rmssd_5min: [0, 0, 62, 0, 75, 52, 56, 56, 64, 57, 55, 78, 77, 83, 70, 35, 21, 25, 49, 44, 48, 48, 62, 69, 66, 64, 79, 59, 67, 66, 70, 63, 53, 57, 53, 57, 38, 26, 18, 24, 30, 35, 36, 46, 53, 59, 50, 50, 53, 53, 57, 52, 41, 37, 49, 47, 48, 35, 32, 34, 52, 57, 62, 57, 70, 81, 81, 65, 69, 72, 64, 0]\n};\nconst SleepSummaryAsync = AsyncData(SleepSummary);\n\nexport { ActivitySummary, ActivitySummaryAsync, ReadinessSummary, ReadinessSummaryAsync, SleepSummary, SleepSummaryAsync };\n//# sourceMappingURL=bundle.js.map\n","function toIsoString(date) {\n  var tzo = -date.getTimezoneOffset(),\n      dif = tzo >= 0 ? \"+\" : \"-\",\n      pad = function (num) {\n    var norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  };\n\n  return date.getFullYear() + \"-\" + pad(date.getMonth() + 1) + \"-\" + pad(date.getDate()) + \"T\" + pad(date.getHours()) + \":\" + pad(date.getMinutes()) + \":\" + pad(date.getSeconds()) + dif + pad(tzo / 60) + \":\" + pad(tzo % 60);\n}\nfunction getRandomInt(min, max) {\n  return Math.ceil(Math.random() * (max - min) + min);\n}\nfunction getNewDate(dStr, days, format) {\n  const currentDate = new Date(dStr);\n  const dateTS = currentDate.setDate(currentDate.getDate() + days);\n\n  switch (format) {\n    case \"ISO-UTC\":\n      return new Date(dateTS).toISOString();\n\n    case \"ISO-LOCAL\":\n      return toIsoString(new Date(dateTS));\n\n    case \"DATE\":\n      return new Date(dateTS).toISOString().split(\"T\")[0];\n\n    case \"TS\":\n      return dateTS;\n  }\n\n  return null;\n}\nfunction getSleepDate(sleepDate, startHour, rangeHour) {\n  const mins = getRandomInt(0, 59).toString().padStart(2, \"0\");\n  const hours = getRandomInt(0, rangeHour);\n  console.log(sleepDate, startHour, hours, mins); //const sleepDateTime=new Date(sleepDate+\"T\"+(startHour+hours).toString().padStart(2,\"0\")+\":\"+mins);\n\n  let sleepDateTime = new Date(sleepDate + \"T\" + startHour.toString().padStart(2, \"0\") + \":\" + mins);\n  console.log(sleepDateTime);\n  return toIsoString(new Date(sleepDateTime.getTime() + hours * 60 * 1000));\n}\n\nexport { getNewDate, getRandomInt, getSleepDate, toIsoString };\n//# sourceMappingURL=bundle.js.map\n","/*\nconst {\n  ActivitySummary,\n  ActivitySummaryAsync,\n  ReadinessSummary,\n  ReadinessSummaryAsync,\n  SleepSummary,\n  SleepSummaryAsync,\n} = require(\"@prifina/oura-data/mockups\");\n\nconst {\n  toIsoString,\n  getRandomInt,\n  getNewDate,\n  getSleepDate,\n} = require(\"./randomUtils\");\n*/\nimport {\n  ActivitySummary,\n  ActivitySummaryAsync,\n  ReadinessSummary,\n  ReadinessSummaryAsync,\n  SleepSummary,\n  SleepSummaryAsync,\n} from \"@dynamic-data/oura-data/mockups\";\n\nimport {\n  toIsoString,\n  getRandomInt,\n  getNewDate,\n  getSleepDate,\n} from \"@dynamic-data/utils\";\n\nconst ActivitySummaryModel = {\n  summary_date: (d, i) => {\n    return getNewDate(d, i, \"DATE\");\n  },\n\n  day_end: (d, i) => {\n    return getNewDate(d, i, \"DATE\");\n    //return '2016-09-04T03:59:59+03:00';\n  },\n  daily_movement: () => {\n    return getRandomInt(1000, 15000);\n  },\n\n  steps: (m) => {\n    const steps = getRandomInt(20, 60);\n    return Math.ceil((m * steps) / 100);\n  },\n  cal_total: () => {\n    return getRandomInt(2000, 3500);\n  },\n  cal_active: (m) => {\n    const cals = getRandomInt(20, 60);\n    return Math.ceil((m * cals) / 100);\n  },\n};\n\nconst ReadinessSummaryModel = {\n  summary_date: (d, i) => {\n    return getNewDate(d, i, \"DATE\");\n  },\n  score: () => {\n    return getRandomInt(60, 90);\n  },\n};\n\nconst SleepSummaryModel = {\n  summary_date: (d, i) => {\n    return getNewDate(d, i, \"DATE\");\n  },\n\n  bedtime_start: (d, start, range) => {\n    return getSleepDate(d, start, range);\n  },\n  bedtime_end: (d, sleepTimeRangeInMins) => {\n    const sleepTime = getRandomInt(\n      sleepTimeRangeInMins[0],\n      sleepTimeRangeInMins[1]\n    );\n    const startTime = new Date(d).getTime();\n    const endTime = startTime + sleepTime * 60 * 1000;\n    return toIsoString(new Date(endTime));\n  },\n  score: () => {\n    return getRandomInt(60, 90);\n  },\n  duration: (startTime, endTime) => {\n    const startTimeTS = new Date(startTime).getTime();\n    const endTimeTS = new Date(endTime).getTime();\n    return Math.ceil((endTimeTS - startTimeTS) / 1000); // secs\n  },\n  awake: () => {\n    return getRandomInt(1000, 2000);\n  },\n  light: (totalSleep) => {\n    const p = getRandomInt(40, 70) / 100;\n    return Math.ceil(totalSleep * p);\n  },\n  rem: (sleepSecs) => {\n    const p = getRandomInt(40, 70) / 100;\n    return Math.ceil(sleepSecs * p);\n  },\n};\n\nconst dataModels = {\n  ActivitySummary: { data: ActivitySummary, mockup: ActivitySummaryModel },\n  ActivitySummaryAsync: {\n    data: ActivitySummaryAsync,\n    mockup: ActivitySummaryModel,\n  }, // CSV header is same as JSON attributes\n  ReadinessSummary: {\n    data: ReadinessSummary,\n    mockup: ReadinessSummaryModel,\n  },\n  ReadinessSummaryAsync: {\n    data: ReadinessSummaryAsync,\n    mockup: ReadinessSummaryModel,\n  },\n  SleepSummary: { data: SleepSummary, mockup: SleepSummaryModel },\n  SleepSummaryAsync: { data: SleepSummaryAsync, mockup: SleepSummaryModel },\n};\n\nexport function getActivityMockupData(dataType, dataModel, dataDate) {\n  let mockupData = {};\n  const mockupModel = dataModels[dataModel].mockup;\n  if (dataType === \"SYNC\") {\n    mockupData = dataModels[dataModel].data;\n  }\n  if (dataType === \"ASYNC\") {\n    const mockupDataRow = dataModels[dataModel].data[1].split(\",\");\n    const mockupDataHeader = dataModels[dataModel].data[0].split(\",\");\n    mockupDataHeader.forEach((k, i) => {\n      mockupData[k] = mockupDataRow[i];\n    });\n  }\n\n  [\n    \"summary_date\",\n    \"daily_movement\",\n    \"cal_total\",\n    \"day_start\",\n    \"day_end\",\n    \"steps\",\n    \"cal_active\",\n  ].forEach((key, i) => {\n    switch (key) {\n      case \"summary_date\":\n        mockupData[key] = dataDate;\n        break;\n      case \"daily_movement\":\n        mockupData[key] = mockupModel[key]();\n        break;\n      case \"cal_total\":\n        mockupData[key] = mockupModel[key]();\n        break;\n\n      case \"day_start\":\n        const dayStartTime = mockupData[key].split(\"T\")[1];\n        mockupData[key] = mockupData[\"summary_date\"] + \"T\" + dayStartTime;\n        break;\n      case \"day_end\":\n        const dayEndTime = mockupData[key].split(\"T\")[1];\n        const dayEndDate = mockupModel[key](mockupData[\"summary_date\"], 1);\n        mockupData[key] = dayEndDate + \"T\" + dayEndTime;\n        break;\n\n      case \"steps\":\n        mockupData[key] = mockupModel[key](mockupData[\"daily_movement\"]);\n        break;\n\n      case \"cal_active\":\n        mockupData[key] = mockupModel[key](mockupData[\"cal_total\"]);\n        break;\n    }\n  });\n\n  return mockupData;\n}\n\nexport function getReadinessMockupData(dataType, dataModel, dataDate) {\n  let mockupData = {};\n  const mockupModel = dataModels[dataModel].mockup;\n  if (dataType === \"SYNC\") {\n    mockupData = dataModels[dataModel].data;\n  }\n  if (dataType === \"ASYNC\") {\n    const mockupDataRow = dataModels[dataModel].data[1].split(\",\");\n    const mockupDataHeader = dataModels[dataModel].data[0].split(\",\");\n    mockupDataHeader.forEach((k, i) => {\n      mockupData[k] = mockupDataRow[i];\n    });\n  }\n\n  [\"summary_date\", \"score\"].forEach((key, i) => {\n    switch (key) {\n      case \"summary_date\":\n        mockupData[key] = dataDate;\n        break;\n      case \"score\":\n        mockupData[key] = mockupModel[key]();\n        break;\n    }\n  });\n\n  return mockupData;\n}\n\nexport function getSleepMockupData(dataType, dataModel, dataDate) {\n  console.log(\"MOCK 2 \", dataModel);\n  console.log(\"MOCK 4 \", dataDate);\n  let mockupData = {};\n  const mockupModel = dataModels[dataModel].mockup;\n  if (dataType === \"SYNC\") {\n    mockupData = dataModels[dataModel].data;\n  }\n  if (dataType === \"ASYNC\") {\n    const mockupDataRow = dataModels[dataModel].data[1].split(\",\");\n    const mockupDataHeader = dataModels[dataModel].data[0].split(\",\");\n    mockupDataHeader.forEach((k, i) => {\n      mockupData[k] = mockupDataRow[i];\n    });\n  }\n\n  [\n    \"summary_date\",\n    \"score\",\n    \"bedtime_start\",\n    \"timezone\",\n    \"bedtime_end\",\n    \"duration\",\n    \"awake\",\n    \"total\",\n    \"light\",\n    \"rem\",\n    \"deep\",\n  ].forEach((key, i) => {\n    switch (key) {\n      case \"summary_date\":\n        mockupData[key] = dataDate;\n        break;\n      case \"timezone\":\n        mockupData[key] = 0; // all dates are utc\n        break;\n      case \"score\":\n        mockupData[key] = mockupModel[key]();\n        break;\n      case \"bedtime_start\":\n        mockupData[key] = mockupModel[key](mockupData[\"summary_date\"], 22, 3);\n        break;\n      case \"bedtime_end\":\n        // sleep time 5-9h\n        mockupData[key] = mockupModel[key](mockupData[\"bedtime_start\"], [\n          5 * 60,\n          9 * 60,\n        ]);\n        break;\n      case \"duration\":\n        mockupData[key] = mockupModel[key](\n          mockupData[\"bedtime_start\"],\n          mockupData[\"bedtime_end\"]\n        );\n        break;\n      case \"awake\":\n        mockupData[key] = mockupModel[key]();\n        break;\n      case \"total\":\n        mockupData[key] = mockupData[\"duration\"] - mockupData[\"awake\"];\n        break;\n      case \"light\":\n        mockupData[key] = mockupModel[key](mockupData[\"total\"]);\n        break;\n      case \"rem\":\n        mockupData[key] = mockupModel[key](\n          mockupData[\"total\"] - mockupData[\"light\"]\n        );\n        break;\n      case \"deep\":\n        mockupData[key] =\n          mockupData[\"total\"] - mockupData[\"light\"] - mockupData[\"rem\"];\n        break;\n    }\n  });\n\n  return mockupData;\n}\n\nexport function getModelCSVHeader(dataModel) {\n  return dataModels[dataModel].data[0].split(\",\");\n}\n"],"names":["ActivitySummaryModel","summary_date","d","i","getNewDate","day_end","daily_movement","getRandomInt","steps","m","Math","ceil","cal_total","cal_active","cals","ReadinessSummaryModel","score","SleepSummaryModel","bedtime_start","start","range","getSleepDate","bedtime_end","sleepTimeRangeInMins","sleepTime","startTime","Date","getTime","endTime","toIsoString","duration","startTimeTS","endTimeTS","awake","light","totalSleep","p","rem","sleepSecs","dataModels","ActivitySummary","data","mockup","ActivitySummaryAsync","ReadinessSummary","ReadinessSummaryAsync","SleepSummary","SleepSummaryAsync","getActivityMockupData","dataType","dataModel","dataDate","mockupData","mockupModel","mockupDataRow","split","mockupDataHeader","forEach","k","key","dayStartTime","dayEndTime","dayEndDate","getReadinessMockupData","getSleepMockupData","console","log","getModelCSVHeader"],"mappings":"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"}